{"version":3,"sources":["hooks/useLocalStorageReducer.js","constants/actions.js","reducers/todos.reducer.js","contexts/todos.context.js","hooks/useInputState.js","styles/TodoFormStyles.js","components/TodoForm.js","styles/EditTodoFormStyles.js","components/EditTodoForm.js","styles/TodoStyles.js","components/Todo.js","hooks/useToggleState.js","components/TodoList.js","components/TodoApp.js","helpers/sizes.js","styles/AppStyles.js","components/App.js","serviceWorker.js","index.js"],"names":["useLocalStorageReducer","key","reducer","defaultValue","useReducer","value","JSON","parse","window","localStorage","getItem","String","e","state","dispatch","useEffect","setItem","stringify","ADD_TODO","REMOVE_TODO","TOGGLE_TODO","EDIT_TODO","action","type","id","uuidv4","task","completed","filter","todo","map","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","todosReducer","todos","Provider","children","initialValue","useState","setValue","target","makeStyles","TodoForm","width","marginBottom","input","height","background","border","borderBottom","color","fontSize","fontWeight","outline","classes","useStyles","useContext","useInputState","handleChange","clearValue","onSubmit","preventDefault","className","placeholder","onChange","EditTodoForm","transition","transform","toggleEditForm","autoFocus","onClick","stopPropagation","Todo","display","alignItems","justifyContent","paddingLeft","lineHeight","overflowX","cursor","opacity","icons","marginRight","float","setState","useToggleState","isEditing","toggle","style","overflowY","textDecoration","memo","TodoList","TodoApp","size","xs","md","App","margin","sizes","header","textAlign","link","backfaceVisibility","position","href","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88ab0728.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react';\r\n\r\nfunction useLocalStorageReducer(key, reducer, defaultValue) {\r\n  const [state, dispatch] = useReducer(reducer, defaultValue, () => {\r\n    let value;\r\n    try {\r\n      value = JSON.parse(\r\n        window.localStorage.getItem(key) || String(defaultValue)\r\n      );\r\n    } catch (e) {\r\n      value = defaultValue;\r\n    }\r\n    return value;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, dispatch];\r\n}\r\n\r\nexport default useLocalStorageReducer;\r\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const REMOVE_TODO = 'REMOVE_TODO';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  ADD_TODO,\r\n  REMOVE_TODO,\r\n  TOGGLE_TODO,\r\n  EDIT_TODO\r\n} from '../constants/actions';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, { id: uuidv4(), task: action.task, completed: false }];\r\n    case REMOVE_TODO:\r\n      return state.filter(todo => todo.id !== action.id);\r\n    case TOGGLE_TODO:\r\n      return state.map(todo =>\r\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n      );\r\n    case EDIT_TODO:\r\n      return state.map(todo =>\r\n        todo.id === action.id ? { ...todo, task: action.task } : todo\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { createContext } from 'react';\r\nimport useLocalStorageReducer from '../hooks/useLocalStorageReducer';\r\nimport todosReducer from '../reducers/todos.reducer';\r\n\r\nconst defaultTodos = [\r\n  { id: '0', task: 'Read a book', completed: false },\r\n  { id: '1', task: 'Jog in a playground', completed: true },\r\n  { id: '2', task: 'Write articles', completed: false }\r\n];\r\n\r\nexport const TodosContext = createContext();\r\nexport const DispatchContext = createContext();\r\n\r\nexport function TodosProvider(props) {\r\n  const [todos, dispatch] = useLocalStorageReducer(\r\n    'todos',\r\n    todosReducer,\r\n    defaultTodos\r\n  );\r\n\r\n  return (\r\n    <TodosContext.Provider value={todos}>\r\n      <DispatchContext.Provider value={dispatch}>\r\n        {props.children}\r\n      </DispatchContext.Provider>\r\n    </TodosContext.Provider>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport default initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const handleChange = e => setValue(e.target.value);\r\n  const clearValue = () => setValue('');\r\n\r\n  return [value, handleChange, clearValue];\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  TodoForm: {\r\n    width: '100%',\r\n    marginBottom: '1rem'\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: '2rem',\r\n    background: 'none',\r\n    border: 'none',\r\n    borderBottom: '1px solid #34495e',\r\n    color: '#34495e',\r\n    fontSize: '1.2rem',\r\n    fontWeight: '300',\r\n    outline: 'none'\r\n  }\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { DispatchContext } from '../contexts/todos.context';\r\nimport useInputState from '../hooks/useInputState';\r\nimport useStyles from '../styles/TodoFormStyles';\r\nimport { ADD_TODO } from '../constants/actions';\r\n\r\nfunction TodoForm() {\r\n  const classes = useStyles();\r\n  const dispatch = useContext(DispatchContext);\r\n  const [value, handleChange, clearValue] = useInputState('');\r\n\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        dispatch({ type: ADD_TODO, task: value });\r\n        clearValue();\r\n      }}\r\n      className={classes.TodoForm}\r\n    >\r\n      <input\r\n        placeholder=\"Add your task here...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={classes.input}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  EditTodoForm: {\r\n    width: '100%',\r\n    marginBottom: '1rem'\r\n  },\r\n  input: {\r\n    width: '85%',\r\n    background: 'transparent',\r\n    border: 'none',\r\n    borderBottom: '1px solid #ccc',\r\n    fontSize: '1rem',\r\n    transition: '0.6s',\r\n    transform: 'translateY(8px)',\r\n    '&:focus': {\r\n      borderBottom: '1px solid #58b2dc',\r\n      outline: 'none'\r\n    }\r\n  }\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { DispatchContext } from '../contexts/todos.context';\r\nimport useInputState from '../hooks/useInputState';\r\nimport useStyles from '../styles/EditTodoFormStyles.js';\r\nimport { EDIT_TODO } from '../constants/actions';\r\n\r\nfunction EditTodoForm({ id, task, toggleEditForm }) {\r\n  const classes = useStyles();\r\n  const dispatch = useContext(DispatchContext);\r\n  const [value, handleChange, clearValue] = useInputState(task);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        dispatch({ type: EDIT_TODO, id, task: value });\r\n        toggleEditForm();\r\n        clearValue();\r\n      }}\r\n      className={classes.EditTodoForm}\r\n    >\r\n      <input\r\n        autoFocus\r\n        value={value}\r\n        onChange={handleChange}\r\n        onClick={e => e.stopPropagation()}\r\n        className={classes.input}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default EditTodoForm;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  Todo: {\r\n    width: '100%',\r\n    height: '2.5rem',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    paddingLeft: '0.5rem',\r\n    color: '#34495e',\r\n    fontSize: '1rem',\r\n    lineHeight: '2.5rem',\r\n    overflowX: 'hidden',\r\n    transition: 'all 0.3s ease',\r\n    '&:hover': {\r\n      background: 'rgba(0, 0, 0, 0.03)',\r\n      cursor: 'pointer'\r\n    },\r\n    '&:hover div': {\r\n      opacity: '1'\r\n    }\r\n  },\r\n  icons: {\r\n    width: '40px',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginRight: '1rem',\r\n    float: 'right',\r\n    transition: 'all 0.3s',\r\n    opacity: '0'\r\n  }\r\n});\r\n","import React, { useContext, memo } from 'react';\r\nimport { DispatchContext } from '../contexts/todos.context';\r\nimport EditTodoForm from './EditTodoForm';\r\nimport useToggleState from '../hooks/useToggleState';\r\nimport useStyles from '../styles/TodoStyles.js';\r\nimport { REMOVE_TODO, TOGGLE_TODO } from '../constants/actions';\r\n\r\nfunction Todo({ id, task, completed }) {\r\n  const classes = useStyles();\r\n  const dispatch = useContext(DispatchContext);\r\n  const [isEditing, toggle] = useToggleState(false);\r\n\r\n  if (isEditing) {\r\n    return (\r\n      <li\r\n        className={classes.Todo}\r\n        style={{ overflowY: 'hidden' }}\r\n        onClick={() => toggle()}\r\n      >\r\n        <EditTodoForm id={id} task={task} toggleEditForm={toggle} />\r\n      </li>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={classes.Todo}\r\n      onClick={() => dispatch({ type: TOGGLE_TODO, id })}\r\n    >\r\n      <span\r\n        style={{\r\n          textDecoration: completed ? 'line-through' : '',\r\n          color: completed ? '#bdc3c7' : '#34495e'\r\n        }}\r\n      >\r\n        {task}\r\n      </span>\r\n      <div className={classes.icons}>\r\n        <i\r\n          style={{ color: '#c0392b' }}\r\n          className=\"fas fa-trash\"\r\n          onClick={e => {\r\n            e.stopPropagation();\r\n            dispatch({ type: REMOVE_TODO, id });\r\n          }}\r\n        />\r\n        <i\r\n          style={{ color: '#58b2dc' }}\r\n          className=\"fas fa-pen\"\r\n          onClick={e => {\r\n            e.stopPropagation();\r\n            toggle();\r\n          }}\r\n        />\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default memo(Todo);\r\n","import { useState } from 'react';\r\n\r\nexport default (initialValue = false) => {\r\n  const [state, setState] = useState(initialValue);\r\n  const toggle = () => setState(!state);\r\n\r\n  return [state, toggle];\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { TodosContext } from '../contexts/todos.context';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n  const todos = useContext(TodosContext);\r\n\r\n  return (\r\n    <ul style={{ paddingLeft: 10, width: '95%' }}>\r\n      {todos.map(todo => (\r\n        <Todo key={todo.id} {...todo} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport { TodosProvider } from '../contexts/todos.context';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\n\r\nfunction TodoApp() {\r\n  return (\r\n    <TodosProvider>\r\n      <TodoForm />\r\n      <TodoList />\r\n    </TodosProvider>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n","export default {\r\n  down(size) {\r\n    const sizes = {\r\n      xs: '575.98px',\r\n      md: '991.98px'\r\n    };\r\n\r\n    return `@media (max-width: ${sizes[size]})`;\r\n  }\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport sizes from '../helpers/sizes';\r\n\r\nexport default makeStyles({\r\n  App: {\r\n    width: '50%',\r\n    margin: '0 auto',\r\n    [sizes.down('md')]: {\r\n      width: '70%'\r\n    },\r\n    [sizes.down('xs')]: {\r\n      width: '90%'\r\n    }\r\n  },\r\n  header: {\r\n    textAlign: 'center',\r\n    '& h1': {\r\n      color: '#2c3e50',\r\n      margin: '5vh 0 0 0',\r\n      fontSize: '5rem',\r\n      fontWeight: '300',\r\n      '& span': {\r\n        fontWeight: '700'\r\n      },\r\n      [sizes.down('xs')]: {\r\n        fontSize: '4.5rem'\r\n      }\r\n    },\r\n    '& h2': {\r\n      color: '#9aa1a5',\r\n      fontSize: '1rem',\r\n      fontWeight: '300',\r\n      [sizes.down('xs')]: {\r\n        fontSize: '0.6rem'\r\n      }\r\n    }\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    backfaceVisibility: 'hidden',\r\n    color: '#81b3d2',\r\n    fontSize: '0.7rem',\r\n    position: 'relative',\r\n    textDecoration: 'none',\r\n    transition: '0.5s color ease'\r\n  }\r\n});\r\n","import React from 'react';\r\nimport TodoApp from './TodoApp';\r\nimport useStyles from '../styles/AppStyles';\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.App}>\r\n      <header className={classes.header}>\r\n        <h1>\r\n          todo<span>list</span>\r\n        </h1>\r\n        <h2>A simple todolist app built with React Hooks & Context</h2>\r\n      </header>\r\n      <TodoApp />\r\n      <a\r\n        href=\"https://github.com/walkccc/react-hooks-todolist\"\r\n        className={classes.link}\r\n      >\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}